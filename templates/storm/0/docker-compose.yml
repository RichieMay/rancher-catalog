version: '2'
services:
    nimbus:
        tty: true
        command: --daemon nimbus logviewer
        image: registry.locman.cn/sefon-public/alpine-storm:1.1.2
        ports:
            - "8081:8081"
        external_links:
            - ${zk_link}:zk
        environment:
            - ENV=${storm_env}
            - ZK_SERVICE=${zk_link}
            - STORM_DATA_DIR=${storm_data_dir}
            - JVM_OPTS=-Xmx${storm_mem}m -Xms${storm_mem}m
        labels:
            io.rancher.container.hostname_override: container_name
            io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
        volumes:
            - storm_data:${storm_data_dir}:rw
    supervisor:
        tty: true
        command: --daemon supervisor logviewer
        image: registry.locman.cn/sefon-public/alpine-storm:1.1.2
        ports:
            - "8081:8081"
        external_links:
            - ${zk_link}:zk
        environment:
            - ENV=${storm_env}
            - ZK_SERVICE=${zk_link}
            - STORM_DATA_DIR=${storm_data_dir}
            - JVM_OPTS=-Xmx${storm_mem}m -Xms${storm_mem}m
        labels:
            io.rancher.container.hostname_override: container_name
            io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
        volumes:
            - storm_data:${storm_data_dir}:rw
        depends_on:
            - nimbus

    ui:
        tty: true
        command: --daemon ui
        image: registry.locman.cn/sefon-public/alpine-storm:1.1.2
        ports:
            - "8080:8080"
        external_links:
            - ${zk_link}:zk
        environment:
            - ZK_SERVICE=${zk_link}
            - STORM_DATA_DIR=${storm_data_dir}
            - JVM_OPTS=-Xmx${storm_mem}m -Xms${storm_mem}m
        labels:
            io.rancher.container.hostname_override: container_name
            io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
        volumes:
            - storm_data:${storm_data_dir}:rw
        depends_on:
            - nimbus
            - supervisor

volumes:
  storm_data:
    driver: ${volume_driver}
    per_container: true
